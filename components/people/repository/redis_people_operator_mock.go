// Code generated by mockery v2.16.0. DO NOT EDIT.

package repository

import (
	"context"

	"github.com/alvadorn/people-api/components/people/domain"
	"github.com/stretchr/testify/mock"
)

// redisPeopleOperatorMock is an autogenerated mock type for the redisPeopleOperatorMock type
type redisPeopleOperatorMock struct {
	mock.Mock
}

// getByName provides a mock function with given fields: ctx, name
func (_m *redisPeopleOperatorMock) getByName(ctx context.Context, name string) (*domain.Person, error) {
	ret := _m.Called(ctx, name)

	var r0 *domain.Person
	if rf, ok := ret.Get(0).(func(context.Context, string) *domain.Person); ok {
		r0 = rf(ctx, name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Person)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// savePerson provides a mock function with given fields: ctx, person
func (_m *redisPeopleOperatorMock) savePerson(ctx context.Context, person *domain.Person) error {
	ret := _m.Called(ctx, person)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *domain.Person) error); ok {
		r0 = rf(ctx, person)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTnewRedisPeopleOperator interface {
	mock.TestingT
	Cleanup(func())
}

// newRedisPeopleOperator creates a new instance of redisPeopleOperatorMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newRedisPeopleOperator(t mockConstructorTestingTnewRedisPeopleOperator) *redisPeopleOperatorMock {
	mock := &redisPeopleOperatorMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
